<!DOCTYPE html>
<!--[if lt IE 7]><html class="no-js lt-ie10 lt-ie9 lt-ie8 lt-ie7 loading"> <![endif]-->
<!--[if IE 7]><html class="no-js lt-ie10 lt-ie9 lt-ie8 loading"> <![endif]-->
<!--[if IE 8]><html class="no-js lt-ie10 lt-ie9 loading"> <![endif]-->
<!--[if IE 9]><html class="no-js lt-ie10 loading"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js loading"> <!--<![endif]-->
    <head>
    <meta charset="utf-8">

    <title>
      Teste
    </title>

    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://fonts.googleapis.com/css?family=Poppins:400,600" rel="stylesheet">
    <link href="public/style.css" rel="stylesheet" />

    </head>


    <body id="home">

      <svg class="hidden">
        <symbol id="lupe" viewBox="302 50 420 40">
              <defs>
                  <rect id="path-1" x="302" y="50" width="420" height="40" rx="20"></rect>
                  <mask id="mask-2" maskContentUnits="userSpaceOnUse" maskUnits="objectBoundingBox" x="0" y="0" width="420" height="40" fill="white">
                      <use xlink:href="#path-1"></use>
                  </mask>
              </defs>
              <g id="Rectangle" stroke="none" fill="none">
                  <use fill-opacity="0.198596014" fill="#798DE2" fill-rule="evenodd" style="mix-blend-mode: multiply;" xlink:href="#path-1"></use>
                  <use stroke-opacity="0.17224298" stroke="#FFFFFF" mask="url(#mask-2)" stroke-width="2" xlink:href="#path-1"></use>
              </g>
        </symbol>

        <symbol id="alarm" viewBox="19 160 985 360">
          <defs>
              <rect id="path-1" x="20" y="160" width="984" height="358" rx="4"></rect>
              <filter x="-50%" y="-50%" width="200%" height="200%" filterUnits="objectBoundingBox" id="filter-2">
                  <feOffset dx="0" dy="1" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>
                  <feColorMatrix values="0 0 0 0 0.784313725   0 0 0 0 0.882352941   0 0 0 0 0.945098039  0 0 0 1 0" type="matrix" in="shadowOffsetOuter1"></feColorMatrix>
              </filter>
          </defs>
          <g id="Rectangle" stroke="none" fill="none">
              <use fill="black" fill-opacity="1" filter="url(#filter-2)" xlink:href="#path-1"></use>
              <use fill="#FFFFFF" fill-rule="evenodd" xlink:href="#path-1"></use>
          </g>
        </symbol>
      </svg>

      <main class="main">
        <header class="header">
          <h2>Olá, João.</h2>

          <form  class="search">
            <input type="search" name="s" />
            <button type="submit"></button>
          </form>

        </header>
        <section class="mails">
        </section>
      </main>

      <template id="maintenances">
        <article class="maintenance">
          <span class="house">Borges de Medeiros</span>
          <div class="appresentation">
            <h2 class="name">Marcelo</h2>
          </div>
          <div class="content">
            <h4></h4>
            Torneira da cozinha vazando muito, alaganado a sala e os quartos, gostaria de uma visita urgente pois a situação está insutentavel, muito obrigado.
          </div>
        </article>
      </template>

      <pre id="firebase"></pre>

    </body>
    <script src="https://www.gstatic.com/firebasejs/live/3.0/firebase.js"></script>

    <script>
    (function() {

        const config = {
            apiKey: "AIzaSyAQB-SlAb9hmGTz9j1agLWogQkrbz-OvYw",
            authDomain: "fuerza-lab.firebaseapp.com",
            databaseURL: "https://fuerza-lab.firebaseio.com",
            storageBucket: "fuerza-lab.appspot.com"
        }

        firebase.initializeApp(config)

        // Get elements from document
        const showMaintenaces = document.querySelector('.mails'),
              mMailTemp = document.querySelector('#maintenances')

        // Get a reference to the database service
        const database = firebase.database(),
              maintenances = database.ref().child('maintenances')

        let render = (snap) =>{
        //  console.log(JSON.stringify(snap, null, 2))

          Object.keys(snap).forEach(key => {
            mMailTemp.content.querySelector('.name').innerText = `${snap[key].user_name}`
            mMailTemp.content.querySelector('.house').innerText = `${snap[key].house}`
            mMailTemp.content.querySelector('.content').innerText = `${snap[key].title}, ${snap[key].description}`
            let clone = document.importNode(mMailTemp.content, true)
            showMaintenaces.appendChild(clone)
          })

        }

        // On add to on firebase
        maintenances.on('child_added', snap => {
          render(snap.val())
        })

    }())
    </script>

</html>
